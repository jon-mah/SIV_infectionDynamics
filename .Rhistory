# Input data
# We first have to establish categories of Pressure
x <- c(1.6, 1.6, 1.6, 1.6, 1.6, 3.8, 3.8, 3.8,
3.8, 6.0, 6.0, 6.0, 6.0, 10.2, 10.2,
10.2, 10.2, 10.2)
# Input data
# We first have to establish categories of Pressure
x <- c(1.6, 1.6, 1.6, 1.6, 1.6, 3.8, 3.8, 3.8,
3.8, 6.0, 6.0, 6.0, 6.0, 10.2, 10.2,
10.2, 10.2, 10.2)
length(x)
# Input data
# We first have to establish categories of Pressure
x <- c(1.6, 1.6, 1.6, 1.6, 1.6,
3.8, 3.8, 3.8, 3.8,
6.0, 6.0, 6.0, 6.0,
10.2, 10.2, 10.2, 10.2, 10.2)
y <- c(59.5, 53.3, 56.8, 63.1, 58.7,
55.2, 59.1, 52.8, 54.4,
51.7, 48.4, 53.9, 49.0,
44.6, 48.5, 41.0, 47.3, 46.1)
boxplot(x~y, data = dat)
# Input data
# We first have to establish categories of Pressure
x <- c(1.6, 1.6, 1.6, 1.6, 1.6,
3.8, 3.8, 3.8, 3.8,
6.0, 6.0, 6.0, 6.0,
10.2, 10.2, 10.2, 10.2, 10.2)
y <- c(59.5, 53.3, 56.8, 63.1, 58.7,
55.2, 59.1, 52.8, 54.4,
51.7, 48.4, 53.9, 49.0,
44.6, 48.5, 41.0, 47.3, 46.1)
boxplot(x~y)
# Input data
# We first have to establish categories of Pressure
x <- c(1.6, 1.6, 1.6, 1.6, 1.6,
3.8, 3.8, 3.8, 3.8,
6.0, 6.0, 6.0, 6.0,
10.2, 10.2, 10.2, 10.2, 10.2)
y <- c(59.5, 53.3, 56.8, 63.1, 58.7,
55.2, 59.1, 52.8, 54.4,
51.7, 48.4, 53.9, 49.0,
44.6, 48.5, 41.0, 47.3, 46.1)
boxplot(y~x)
# Input data
# We first have to establish categories of Pressure
x <- c(1.6, 1.6, 1.6, 1.6, 1.6,
3.8, 3.8, 3.8, 3.8,
6.0, 6.0, 6.0, 6.0,
10.2, 10.2, 10.2, 10.2, 10.2)
y <- c(59.5, 53.3, 56.8, 63.1, 58.7,
55.2, 59.1, 52.8, 54.4,
51.7, 48.4, 53.9, 49.0,
44.6, 48.5, 41.0, 47.3, 46.1)
boxplot(y~x, xlab = 'Pressure', ylab = 'Temperature',
main = 'Temperature at four different pressure levels')
# Analysis of Variance
aov.1 = aov(y ~ as.factor(x))
summary(aov.1)
# Input data
# We first have to establish categories of Pressure
x = c(1.6, 1.6, 1.6, 1.6, 1.6,
3.8, 3.8, 3.8, 3.8,
6.0, 6.0, 6.0, 6.0,
10.2, 10.2, 10.2, 10.2, 10.2)
y = c(59.5, 53.3, 56.8, 63.1, 58.7,
55.2, 59.1, 52.8, 54.5,
51.7, 48.8, 53.9, 49.0,
44.6, 48.5, 41.0, 47.3, 46.1)
boxplot(y~x, xlab = 'Pressure', ylab = 'Temperature',
main = 'Temperature at four different pressure levels')
# Input data
# We first have to establish categories of Pressure
x = c(1.6, 1.6, 1.6, 1.6, 1.6,
3.8, 3.8, 3.8, 3.8,
6.0, 6.0, 6.0, 6.0,
10.2, 10.2, 10.2, 10.2, 10.2)
y = c(59.5, 53.3, 56.8, 63.1, 58.7,
55.2, 59.1, 52.8, 54.5,
51.7, 48.8, 53.9, 49.0,
44.6, 48.5, 41.0, 47.3, 46.1)
boxplot(y~x, xlab = 'Pressure', ylab = 'Temperature',
main = 'Temperature at four different pressure levels')
# Analysis of Variance
aov.1 = aov(y ~ as.factor(x))
summary(aov.1)
y1_bar = mean(y[x==1.6])
y2_bar = mean(y[x==3.8])
y3_bar = mean(y[x==6.0])
y4_bar = mean(y[x==10.2])
y_barbar = mean(c(y1_bar, y2_bar, y3_bar, y4_bar))
mean(y)
y1_bar = mean(y[x==1.6])
y2_bar = mean(y[x==3.8])
y3_bar = mean(y[x==6.0])
y4_bar = mean(y[x==10.2])
y_barbar = mean(y)
y1_bar = mean(y[x==1.6])
y2_bar = mean(y[x==3.8])
y3_bar = mean(y[x==6.0])
y4_bar = mean(y[x==10.2])
y_barbar = mean(y)
source('C:/Users/jonat/Google Drive/UW/3rd Year_ 2018-2019/UW Sum 2018/Stat 390 (4)/HW_set13/HW_13_script.R', echo=TRUE)
SS_bet = n_1 * (y1_bar - y_barbar) ^ 2 +
n_2 * (y2_bar - y_barbar) ^ 2 +
n_3 * (y3_bar - y_barbar) ^ 2 +
n_4 * (y4_bar - y_barbar) ^ 2
source('C:/Users/jonat/Google Drive/UW/3rd Year_ 2018-2019/UW Sum 2018/Stat 390 (4)/HW_set13/HW_13_script.R', echo=TRUE)
MS_bet = SS_bet / (k - 1)
MS_wit = SS_wit / (n - k)
source('C:/Users/jonat/Google Drive/UW/3rd Year_ 2018-2019/UW Sum 2018/Stat 390 (4)/HW_set13/HW_13_script.R', echo=TRUE)
source('C:/Users/jonat/Google Drive/UW/3rd Year_ 2018-2019/UW Sum 2018/Stat 390 (4)/HW_set13/HW_13_script.R', echo=TRUE)
# The value of F_obs is 17.11
pf(F_obs, df1 = (k - 1), df2 = (n - k))
# The value of F_obs is 17.11
pf(F_obs, df1 = (k - 1), df2 = (n_tot - k))
# The value of F_obs is 17.11
pf(F_obs, df1 = (k - 1), df2 = (n_tot - k), lower.tail = FALSE)
x_1 = y[x==1.6]
N = length(x_1)
X = seq(0.5 / N, 1 - 0.5 / N, length = N)
Q = qnorm(X)
plot(Q, sort(x_1), type = 'b', xlim = c(-2, 2),
ylim = range(y))
x_1 = y[x==1.6]
N = length(x_1)
X = seq(0.5 / N, 1 - 0.5 / N, length = N)
Q = qnorm(X)
plot(Q, sort(x_1), type = 'b', xlim = c(-2, 2),
ylim = range(y))
x_2 = y[x==3.8]
N = length(x_2)
X = seq(0.5 / N, 1 - 0.5 / N, length = N)
Q = qnorm(X)
points(Q, sort(x_2), type = 'b', col = 2)
x_3 = y[x==6.0]
N = length(x_3)
X = seq(0.5 / N, 1 - 0.5 / N, length = N)
Q = qnorm(X)
points(Q, sort(x_3), type = 'b', col = 2)
x_4 = y[x==10.2]
N = length(x_4)
X = seq(0.5 / N, 1 - 0.5 / N, length = N)
Q = qnorm(X)
points(Q, sort(x_4), type = 'b', col = 2)
x_1 = y[x==1.6]
N = length(x_1)
X = seq(0.5 / N, 1 - 0.5 / N, length = N)
Q = qnorm(X)
plot(Q, sort(x_1), type = 'b', xlim = c(-2, 2),
ylim = range(y), xlab = 'Theoretical Quantiles',
ylab = 'Sample Quantiles')
x_2 = y[x==3.8]
N = length(x_2)
Q = qnorm(X)
points(Q, sort(x_2), type = 'b', col = 2)
X = seq(0.5 / N, 1 - 0.5 / N, length = N)
x_3 = y[x==6.0]
N = length(x_3)
X = seq(0.5 / N, 1 - 0.5 / N, length = N)
Q = qnorm(X)
points(Q, sort(x_3), type = 'b', col = 3)
x_4 = y[x==10.2]
N = length(x_4)
Q = qnorm(X)
X = seq(0.5 / N, 1 - 0.5 / N, length = N)
points(Q, sort(x_4), type = 'b', col = 4)
x_1 = y[x==1.6]
N = length(x_1)
X = seq(0.5 / N, 1 - 0.5 / N, length = N)
Q = qnorm(X)
plot(Q, sort(x_1), type = 'b', xlim = c(-2, 2),
ylim = range(y), xlab = 'Theoretical Quantiles',
ylab = 'Sample Quantiles')
x_2 = y[x==3.8]
N = length(x_2)
X = seq(0.5 / N, 1 - 0.5 / N, length = N)
Q = qnorm(X)
points(Q, sort(x_2), type = 'b', col = 2)
x_3 = y[x==6.0]
N = length(x_3)
X = seq(0.5 / N, 1 - 0.5 / N, length = N)
Q = qnorm(X)
points(Q, sort(x_3), type = 'b', col = 3)
x_4 = y[x==10.2]
N = length(x_4)
X = seq(0.5 / N, 1 - 0.5 / N, length = N)
Q = qnorm(X)
points(Q, sort(x_4), type = 'b', col = 4)
# Let x be the integers between 1 and 100
x = 1:100
x
source('C:/Users/jonat/Google Drive/UW/3rd Year_ 2018-2019/UW Sum 2018/Stat 390 (4)/HW_set13/HW_13_script.R', echo=TRUE)
lm.1$coefficients
lm.1$coefficients[1]
lm.1$coefficients[2]
lm.1$coefficients[3]
# Let x be the integers between 1 and 100
x = 1:100
# Take 5000 samples of size 100
numSamp = 5000
n = 100
alpha = 20
beta1 = 2
beta2 = 0.1
sigma_e = 20
coeff_alpha = numeric(numSamp)
coeff_beta1 = numeric(numSamp)
coeff_beta2 = numeric(numSamp)
for (i in 1:numSamp) {
error = rnorm(length(x), sd = sigma_e)
y <- alpha + beta1 * x + beta2 * x ^ 2 + error
lm.1 <- lm(y ~ x + I(x ^ 2))
coeff_alpha[i] = lm.1$coefficients[1]
coeff_beta1[i] = lm.1$coefficients[2]
coeff_beta2[i] = lm.1$coefficients[3]
}
### Part B
hist(coeff_alpha)
hist(coeff_beta1)
hist(coeff_beta2)
### Part B
qqplot(coeff_alpha)
### Part B
qqplot(sort(coeff_alpha))
### Part B
qqplot(qnorm, sort(coeff_alpha))
### Part B
qqnorm(coeff_alpha)
qqnorm(coeff_beta1)
qqnorm(coeff_beta2)
### Part B
qqnorm(coeff_alpha) # Looks normal
qqnorm(coeff_beta1) # Looks normal
qqnorm(coeff_beta2) # Looks normal
### Part B
qqnorm(coeff_alpha) # Looks normal
qqnorm(coeff_beta1) # Looks normal
### Part B
qqnorm(coeff_alpha, main = 'Normal Q-Q Plot of alpha') # Looks normal
### Part B
qqnorm(coeff_alpha, main = 'Normal Q-Q plot of alpha') # Looks normal
qqnorm(coeff_beta1, main = 'Normal Q-Q plot of beta1') # Looks normal
qqnorm(coeff_beta2, main = 'Normal Q-Q plot of beta2') # Looks normal
### Part C
mean(coeff_alpha)
mean(coeff_beta1)
mean(coeff_beta2)
hist(coeff_alpha) # Looks normal
hist(coeff_beta1) # Looks normal
hist(coeff_beta2) # Looks normal
### Part D
sd(coeff_beta2)
sigma_e / sum((x - mean(x))^2)
### Part D
sd(coeff_beta2) # 0.00269835
sigma_e / sqrt(sum((x - mean(x))^2))
source('C:/Users/jonat/Google Drive/UW/3rd Year_ 2018-2019/UW Sum 2018/Stat 390 (4)/HW_set14/HW14_script.R', echo=TRUE)
# Make a scatterplot
plot(x, y)
source('C:/Users/jonat/Google Drive/UW/3rd Year_ 2018-2019/UW Sum 2018/Stat 390 (4)/HW_set14/HW14_script.R', echo=TRUE)
### Part B
# What is the point estimate of the beta coefficient?
lm.1 = lm(y ~ x)
lm.1$coefficients
### Part C
# What is s_e
summary(lm.1)
### Part C
# What is s_e
summary(lm.1)
source('C:/Users/jonat/Google Drive/UW/3rd Year_ 2018-2019/UW Sum 2018/Stat 390 (4)/HW_set14/HW14_script.R', echo=TRUE)
lower_bound = beta_hat - t_star * s_e / sqrt(S_xx)
source('C:/Users/jonat/Google Drive/UW/3rd Year_ 2018-2019/UW Sum 2018/Stat 390 (4)/HW_set14/HW14_script.R', echo=TRUE)
source('C:/Users/jonat/Google Drive/UW/3rd Year_ 2018-2019/UW Sum 2018/Stat 390 (4)/HW_set14/HW14_script.R', echo=TRUE)
source('C:/Users/jonat/Google Drive/UW/3rd Year_ 2018-2019/UW Sum 2018/Stat 390 (4)/HW_set14/HW14_script.R', echo=TRUE)
source('C:/Users/jonat/Google Drive/UW/3rd Year_ 2018-2019/UW Sum 2018/Stat 390 (4)/HW_set14/HW14_script.R', echo=TRUE)
interval = c(lower_bound, upper_bound)
source('C:/Users/jonat/Google Drive/UW/3rd Year_ 2018-2019/UW Sum 2018/Stat 390 (4)/HW_set14/HW14_script.R', echo=TRUE)
interval
source('C:/Users/jonat/Google Drive/UW/3rd Year_ 2018-2019/UW Sum 2018/Stat 390 (4)/HW_set14/HW14_script.R', echo=TRUE)
source('C:/Users/jonat/Google Drive/UW/3rd Year_ 2018-2019/UW Sum 2018/Stat 390 (4)/HW_set14/HW14_script.R', echo=TRUE)
source('C:/Users/jonat/Google Drive/UW/3rd Year_ 2018-2019/UW Sum 2018/Stat 390 (4)/HW_set14/HW14_script.R', echo=TRUE)
source('C:/Users/jonat/Google Drive/UW/3rd Year_ 2018-2019/UW Sum 2018/Stat 390 (4)/HW_set14/HW_14_Script_R.R', echo=TRUE)
source('C:/Users/jonat/Google Drive/UW/3rd Year_ 2018-2019/UW Sum 2018/Stat 390 (4)/HW_set14/HW_14_Script_R.R', echo=TRUE)
### 25_2
alpha = 0.05
prob = numeric(100)
for (k in 1:100) {
prob[k]= 1 - (1 - alpha) ^ k
}
plot(k, prob)
length(prob)
### 25_2
alpha = 0.05
prob = numeric(100)
k = 1:100
for (i in 1:k) {
prob[i]= 1 - (1 - alpha) ^ k
}
### 25_2
alpha = 0.05
prob = numeric(100)
k = 1:100
for (i in 1:100) {
prob[i]= 1 - (1 - alpha) ^ k
}
plot(k, prob)
plot(1:100, prob)
### 25_2
alpha = 0.05
prob = numeric(100)
for (k in 1:100) {
prob[k]= 1 - (1 - alpha) ^ k
}
plot(1:100, prob)
prob = numeric(100)
for (k in 1:100) {
prob[k]= 1 - (1 - alpha) ^ k
}
plot(1:100, prob,
main = 'Probability vs k = (1:100), with alpha = 0.05',
xlab = 'k')
alpha = 0.01
alpha = 0.01
prob = numeric(100)
for (k in 1:100) {
prob[k]= 1 - (1 - alpha) ^ k
}
plot(1:100, prob,
main = 'Probability vs k = (1:100), with alpha = 0.01',
xlab = 'k')
### Part A
# Read in the data
dat <- read.table('https://www.stat.washington.edu/marzban/390/summer18/hw_3_dat1.txt')
### Quiz 9
dat
### Part A
# Read in the data
dat <- read.table('https://www.stat.washington.edu/marzban/390/summer18/hw_3_dat1.txt', header = TRUE)
dat
x_1 <- dat[:, 1]
x_1 <- dat[, 1]
x_1
### Part A
# Read in the data
dat <- read.table('https://www.stat.washington.edu/marzban/390/summer18/hw_3_dat1.txt', header = TRUE)
x_1 <- dat[, 1]
x_2 <- dat[, 2]
dat
source('C:/Users/jonat/Google Drive/UW/3rd Year_ 2018-2019/UW Sum 2018/Stat 390 (4)/temp.R', echo=TRUE)
lm.1 = lm(y ~ x + x_1 + x_2 + I(x_1 * x_2))
lm.1 = lm(y ~ x_1 + x_2 + I(x_1 * x_2))
lm.1
predict(model.1, interval = 'confidence', level = 0.95)
predict(lm.1, interval = 'confidence', level = 0.95)
predict(lm.1[1], interval = 'confidence', level = 0.95)
predict(lm.1[1,], interval = 'confidence', level = 0.95)
predict(lm.1, interval = 'confidence', level = 0.95)
predict(lm.1, interval = 'confidence', level = 0.95)[1]
source('C:/Users/jonat/Google Drive/UW/3rd Year_ 2018-2019/UW Sum 2018/Stat 390 (4)/temp.R', echo=TRUE)
source('C:/Users/jonat/Google Drive/UW/3rd Year_ 2018-2019/UW Sum 2018/Stat 390 (4)/temp.R', echo=TRUE)
predictions
predict(lm.1,
interval = 'confidence',
level = 0.95)[1]
predict(lm.1, interval = 'confidence', level = 0.95)
predict(lm.1, interval = 'confidence', level = 0.95)
###
predict(lm.1, interval = 'confidence', level = 0.95)[1]
###
predict(lm.1, interval = 'confidence', level = 0.95)[1, ]
predict(lm.1, interval = 'confidence', level = 0.95)[1, 2]
source('C:/Users/jonat/Google Drive/UW/3rd Year_ 2018-2019/UW Sum 2018/Stat 390 (4)/temp.R', echo=TRUE)
y[1]
yp2[]
y[2]
source('C:/Users/jonat/Google Drive/UW/3rd Year_ 2018-2019/UW Sum 2018/Stat 390 (4)/temp.R', echo=TRUE)
count
source('C:/Users/jonat/Google Drive/UW/3rd Year_ 2018-2019/UW Sum 2018/Stat 390 (4)/temp.R', echo=TRUE)
### Part C
# Repeat parts a and b
lm.2 = lm(y ~ x_1 + x_2)
# These are all 95% PIs for the data
predict(lm.2, interval = 'prediction', level = 0.95)
source('C:/Users/jonat/Google Drive/UW/3rd Year_ 2018-2019/UW Sum 2018/Stat 390 (4)/temp.R', echo=TRUE)
?anova
### Part E
anova(lm.1)
anova(lm.2)
### Part E
anova(lm.1)
anova(lm.2)
### Part E
anova(lm.1)
lm.1$R.squared
?R.squared
summary(lm.1)
### Part E
summary(lm.1)$R.squared
### Part E
summary(lm.1)$r.squared
# The value of R^2 is 0.9356425
summary(lm.1)
# The value of R^2 is 0.9356425
anova(lm.1)
source('C:/Users/jonat/Google Drive/UW/3rd Year_ 2018-2019/UW Sum 2018/Stat 390 (4)/temp.R', echo=TRUE)
y
### Part F
FF = numeric(1000)
ntrial = 1000
for (i in 1:ntrial) {
Y = sample(y, 500, rep=F)
lm.temp = lm(Y ~ x_1 + x_2 + I(x_1 * x_2))
FF[i] = summary(lm.temp)$fstat[1]
}
FF
# Set working directory to SIV_infectionDynamics
VirusViewByWeek <- read_csv("Data/VirusViewByWeek.csv")
setwd("C:/Users/jonat/Desktop/GitHub/SIV_infectionDynamics")
# Set working directory to SIV_infectionDynamics
VirusViewByWeek <- read_csv("Data/VirusViewByWeek.csv")
H3_dat <- VirusViewByWeek['Virus' == 'A (H3)']
# Set working directory to SIV_infectionDynamics
VirusViewByWeek <- read_csv("Data/VirusViewByWeek.csv")
# Set working directory to SIV_infectionDynamics
library(readr)
VirusViewByWeek <- read_csv("Data/VirusViewByWeek.csv")
H3_dat <- VirusViewByWeek['Virus' == 'A (H3)']
popInfected <- VirusViewByWeek$`0-4 yr` + VirusViewByWeek$`5-24 yr` + VirusViewByWeek$`25-64 yr` + VirusViewByWeek$`65+ yr`
popInfec
popInfected
source('C:/Users/jonat/Desktop/GitHub/SIV_infectionDynamics/Scripts/modelData.R', echo=TRUE)
h3_dat
H3_dat
VirusViewByWeek$Virus
H3_dat <- VirusViewByWeek['Virus' == 'A (H3)']
popInfected <- H3_dat$`0-4 yr` + H3_dat$`5-24 yr` + H3_dat$`25-64 yr` + H3_dat$`65+ yr`
H3_dat
H3_dat <- VirusViewByWeek[Virus == 'A (H3)']
H3_dat <- VirusViewByWeek['Virus' == 'A (H3)']
H3_dat <- VirusViewByWeek['Virus' == "A (H3)"]
popInfected <- H3_dat$`0-4 yr` + H3_dat$`5-24 yr` + H3_dat$`25-64 yr` + H3_dat$`65+ yr`
H3_dat <- VirusViewByWeek['Week' == 1]
H3_dat <- VirusViewByWeek[VirusViewByWeek$Virus == "A (H3)"]
source('C:/Users/jonat/Desktop/GitHub/SIV_infectionDynamics/Scripts/modelData.R', echo=TRUE)
dat
dat[Virus == "A (H3)"]
dat['Virus' == "A (H3)"]
dat['Virus' = "A (H3)"]
dat['Virus' == "A (H3)"]
dat['Virus']
dat$names
dat$Virus
dat[Virus]
dat['Virus']
dat['Virus' is "A (H3)"]
plot(dat)
plot(dat$Week, dat$Virus)
virus <- H3_dat$Virus
virus <- dat$Virus
hist(virus)
hist(week)
week <- dat$Week
hist(week)
plot(week, virus)
plot(week, count(virus))
dat <- read_table("Data/VirusViewByWeek.csv")
dat <- read_table("Data/VirusViewByWeek.csv", header = T)
dat <- read_table("Data/VirusViewByWeek.csv", Header = T)
dat <- read_table("Data/VirusViewByWeek.csv", 'Header' = TRUE)
dat <- read_table("Data/VirusViewByWeek.csv")
dat
dat <- read_table("Data/VirusViewByWeek.csv", header = F)
dat <- read_csv("Data/VirusViewByWeek.csv")
dat <- read.table("Data/VirusViewByWeek.csv", header = FALSE)
dat <- read_csv("Data/H3_dat.csv")
dat
dat$zeroToFour
dat <- read_csv("Data/H3_dat.csv")
popInfected <- dat$zeroToFour + dat$fiveToTwentyFour + dat$twentyFiveToSixtyFour + dat$sixtyFivePlus
popInfected
plot(dat$week, popInfected)
plot(dat$Week, popInfected)
dat$Year
plot(dat$Week, popInfected['Year' == 2016])
plot(dat$Week['Year' == 2016], popInfected['Year' == 2016])
plot(dat$Week, popInfected)
dat$Week
dat$Year
dat <- read_csv("Data/all_dat.csv")
dat <- read_csv("Data/all_dat.csv")
popInfected <- dat$zeroToFour + dat$fiveToTwentyFour + dat$twentyFiveToSixtyFour + dat$sixtyFivePlus
plot(dat$Week, popInfected)
x <- dat$Week
y <- popInfected
lm.1 <- lm(y ~ x)
lm.1
dat
dat <- read_csv("Data/chronoDat.csv")
plot(dat$Week, dat$totalPop)
dat <- read_csv("Data/chronoDat.csv")
plot(dat$Week, dat$totalPop, main = 'Influenza infections by week',
xlab = 'Week', ylab = 'Number of Infected Individuals')
plot(dat$Week, dat$totalPop, main = 'Influenza infections by week from 1998 to 2018',
xlab = 'Week', ylab = 'Number of Infected Individuals')
x <- dat$Week
y <- dat$totalPop
lm.1 <- lm(y ~ x)
lm.1
plot(dat$Week, dat$totalPop, main = 'Influenza Infections by Week from 1998 to 2018',
xlab = 'Week', ylab = 'Number of Infected Individuals')
